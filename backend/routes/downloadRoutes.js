const express = require("express");
const { exec } = require("child_process");
const router = express.Router();
const fs = require("fs");

router.get("/", (req, res) => {
    const videoUrl = req.query.url;

    if (!videoUrl) {
        return res.status(400).json({ error: "URL do YouTube √© obrigat√≥ria" });
    }

    console.log(`üì• Iniciando download do v√≠deo: ${videoUrl}`);

    // Define os arquivos tempor√°rios
    const videoFile = "video.mp4";
    const audioFile = "audio.m4a";
    const outputFile = "output.mp4";

    // Comandos para baixar v√≠deo e √°udio
    const videoCommand = `yt-dlp -f 137 -o ${videoFile} ${videoUrl}`;
    const audioCommand = `yt-dlp -f 140 -o ${audioFile} ${videoUrl}`;
    const mergeCommand = `ffmpeg -i ${videoFile} -i ${audioFile} -c:v copy -c:a aac -strict experimental ${outputFile}`;

    // Executa o download do v√≠deo
    exec(videoCommand, (videoError) => {
        if (videoError) {
            console.error("üö® Erro ao baixar v√≠deo:", videoError);
            return res.status(500).json({ error: "Erro ao baixar v√≠deo." });
        }

        console.log("‚úÖ V√≠deo baixado com sucesso.");

        // Executa o download do √°udio
        exec(audioCommand, (audioError) => {
            if (audioError) {
                console.error("üö® Erro ao baixar √°udio:", audioError);
                return res.status(500).json({ error: "Erro ao baixar √°udio." });
            }

            console.log("‚úÖ √Åudio baixado com sucesso.");

            // Junta o √°udio e o v√≠deo
            exec(mergeCommand, (mergeError) => {
                if (mergeError) {
                    console.error("üö® Erro ao fundir √°udio e v√≠deo:", mergeError);
                    return res.status(500).json({ error: "Erro ao fundir √°udio e v√≠deo." });
                }

                console.log("üé¨ V√≠deo finalizado com sucesso!");

                // Enviar o arquivo final
                res.download(outputFile, "video_final.mp4", (err) => {
                    if (err) console.error("Erro ao enviar arquivo:", err);

                    // Remover arquivos tempor√°rios ap√≥s o envio
                    fs.unlinkSync(videoFile);
                    fs.unlinkSync(audioFile);
                    fs.unlinkSync(outputFile);
                });
            });
        });
    });
});

module.exports = router;
